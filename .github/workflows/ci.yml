name: CI

on:
  push:
    branches:
      - main

permissions: 
  id-token: write
  contents: read

jobs:
  build:
    name: 'Build and Push'
    runs-on: ubuntu-latest
    # strategy:
    #   matrix:
    #     node-version: [16, 18, 20]

    steps:
    - uses: actions/checkout@v4

    # - name: Setup node | ${{ matrix.node-version}}
    - name: Setup node 
      uses: actions/setup-node@v4
      with:
        # node-version: ${{ matrix.node-version }}
        node-version: 20
        cache: 'npm'
    - run: npm install
    # - run: npm run test

    - name: Generate tag
      id: generate_tag
      run: |
        SHA=$(echo $GITHUB_SHA | head -c7)
        echo "sha=$SHA" >> $GITHUB_OUTPUT

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::442426890902:role/ecr-role
        aws-region: us-east-2

    - name: Login to AWS ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build docker image
      id: build-docker-image
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        TAG: ${{ steps.generate_tag.outputs.sha }}
      run: | 
        docker build -t $REGISTRY/nicolasmacedo-ci:$TAG . 
        docker push $REGISTRY/nicolasmacedo-ci:$TAG 
        docker tag $REGISTRY/nicolasmacedo-ci:$TAG $REGISTRY/nicolasmacedo-ci:latest
        docker push $REGISTRY/nicolasmacedo-ci:latest
        IMAGE=$(echo $REGISTRY/nicolasmacedo-ci:$TAG)
        echo "image=$IMAGE" >> $GITHUB_OUTPUT
    
    - name: Deploy to App Runner
      id: deploy-app-runner
      uses: awslabs/amazon-app-runner-deploy@main
      with:
        service: pass-in-api
        image: ${{ steps.build-docker-image.outputs.image }}
        access-role-arn: arn:aws:iam::442426890902:role/app-runner-role
        region: us-east-2
        cpu: 1
        memory: 2
        port: 3333
        # wait-for-service-stability-seconds: 180

    - name: App Runner check
      run: echo "App Runner running ${{ steps.deploy-app-runner.outputs.service-url }}"



    # - name: Login to DockerHub
    #   uses: docker/login-action@v3
    #   with:
    #     username: ${{ secrets.DOCKERHUB_USERNAME }}
    #     password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    # - name: Build and push docker image
    #   uses: docker/build-push-action@v5
    #   with:
    #     push: true
    #     tags: nicolasmacedoo/pass.in:${{ steps.generate_tag.outputs.sha }}, nicolasmacedoo/pass.in:latest

    # - name: Build docker image
    #   run: docker build -t nicolasmacedoo/pass.in:${{ steps.generate_tag.outputs.sha }} . 

    # - name: Push docker image
    #   run: docker push nicolasmacedoo/pass.in:${{ steps.generate_tag.outputs.sha }}